module: dagster
environment: generic
replicas: 1

# Configuration du fichier dagster.yaml
filePath: "./dagster.yaml"


# Variables d'environnement
env:
  - name: POSTGRES_USER
    valueFrom:
      secretKeyRef:
        name: dagster-postgresql-secret
        key: POSTGRES_USER
  - name: POSTGRES_PASSWORD
    valueFrom:
      secretKeyRef:
        name: dagster-postgresql-secret
        key: POSTGRES_PASSWORD
  - name: POSTGRES_DB
    valueFrom:
      secretKeyRef:
        name: dagster-postgresql-secret
        key: POSTGRES_DB
        

# Configuration de l'image
containers:
  name: dagster
  image: ghcr.io/miletocarmelo/devops_helm_generic_dagster_backend/dagster
  tags: latest
  ports:
    containerPort: 3000
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi" 
      cpu: "200m"
    
# Configuration du service
service:
  type: ClusterIP
  port: 3000
  targetPort: 3000

# Configuration des volumes
volumes:
  - name: dagster-dev-app
    configMap:
      name: dagster-app-code
  - name: dagster-dev-storage
    persistentVolumeClaim:
      claimName: dagster-storage
  - name: dagster-dev-config
    configMap:
      name: dagster-dev-config
      items:
        - key: dagster.yaml
          path: dagster.yaml
  - name: workspace-volume
    configMap:
      name: dagster-workspace

# Configuration des montages de volumes
volumeMounts:
  - name: dagster-dev-app
    mountPath: /opt/dagster/app
  - name: dagster-dev-storage
    mountPath: /opt/dagster/dagster_home
  - name: dagster-dev-config
    mountPath: /opt/dagster/dagster_home/dagster.yaml
    subPath: dagster.yaml
  - name: workspace-volume
    mountPath: /app/workspace.yaml
    subPath: workspace.yaml